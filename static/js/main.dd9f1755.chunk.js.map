{"version":3,"sources":["Redux/User/user-operations.js","Components/Navigation/Navigation.module.css","Redux/contacts/contact-actions.js","Redux/contacts/contacts-operations.js","Components/UserMenu/userMenu.module.css","Components/Container/Container.module.css","Redux/contacts/contact-slice.js","Redux/User/user-slice.js","Redux/store.js","Redux/User/user-selectors.js","Components/UserMenu/LogedInData.js","Components/UserMenu/LogedOutNav.js","Components/UserMenu/UserMenu.js","Components/Navigation/Navigation.js","Components/Container/Container.js","Components/PrivateRoute.js","Components/PublickRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","registration","createAsyncThunk","credantials","a","post","data","logedIn","console","log","logOut","getCurrentUserData","_","getState","persistedToken","user","name","email","isLogedIn","get","module","exports","setFilter","createAction","openModal","closeModal","fetchContacts","postContact","contactData","deleteContact","id","delete","correctContact","number","body","patch","contactsSlice","createSlice","initialState","items","filter","isModalOpen","mutableContactId","extraReducers","fulfilled","state","action","payload","push","item","userSlice","isRefreshing","rejected","pending","contactsPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","userReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","getIsLogedIn","getUserName","getIsRefreshing","connect","useSelector","dispatch","useDispatch","className","s","userMenuContainer","Button","userMenuBtn","type","onClick","navContainer","to","navLink","activeClassName","activeNavLink","navigation","exact","Container","children","routProps","restrickted","routeProps","shouldRedirect","HomeView","lazy","AddContactForm","Filter","ContactList","Login","Registration","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dd9f1755.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    }\r\n};\r\n\r\nconst registration = createAsyncThunk('users/registration', async (credantials) => {\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credantials);\r\n        token.set(data.token);\r\n        return data\r\n    } catch (error) {\r\n        return error\r\n    }\r\n});\r\n\r\nconst logedIn = createAsyncThunk('users/logedIn', async (credantials) => {\r\n    try {\r\n        const { data } = await axios.post('/users/login', credantials);\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error)\r\n        return error\r\n    }\r\n});\r\n\r\nconst logOut = createAsyncThunk('users/logOut', async () => {\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n    } catch (error) {\r\n        return error\r\n    }\r\n});\r\nconst getCurrentUserData = createAsyncThunk('user/getCurrentUserData', async (_, { getState }) => {\r\n    const persistedToken = getState().user.token\r\n    if (persistedToken === null) {\r\n        return ({\r\n            name: '',\r\n            email: '',\r\n            isLogedIn: false\r\n        })\r\n    }\r\n    token.set(persistedToken)\r\n    try {\r\n        const { data } = await axios.get('/users/current')\r\n        return ({\r\n            name: data.name,\r\n            email: data.email,\r\n            isLogedIn: true\r\n        })\r\n    } catch (error) {\r\n        return error\r\n    }\r\n});\r\n\r\n\r\n\r\nexport {\r\n    registration,\r\n    logedIn,\r\n    logOut,\r\n    getCurrentUserData\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__3YLG5\",\"activeNavLink\":\"Navigation_activeNavLink__3Out5\",\"navigation\":\"Navigation_navigation__TXKId\",\"navContainer\":\"Navigation_navContainer__1DsIx\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst setFilter = createAction('contacts/setFilter');\r\nconst openModal = createAction('contacts/openModal');\r\nconst closeModal = createAction('contacts/closeModal');\r\n\r\nexport {\r\n    setFilter,\r\n    openModal,\r\n    closeModal\r\n};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/'\r\n\r\nconst fetchContacts = createAsyncThunk('contacts/fetchContacts',\r\n    async () => {\r\n        try {\r\n            const { data } = await axios.get('/contacts');\r\n            return data\r\n        } catch (error) {\r\n          \r\n        }\r\n    }\r\n);\r\nconst postContact = createAsyncThunk('contacts/postContact',\r\n    async (contactData) => {\r\n        try {\r\n            const { data } = await axios.post('/contacts', contactData)\r\n            return data\r\n        } catch (error) {\r\n           \r\n        }\r\n    }\r\n);\r\nconst deleteContact = createAsyncThunk('contacts/deleteContact',\r\n    async (id) => {\r\n        try {\r\n            await axios.delete(`/contacts/${id}`)\r\n            return id\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n);\r\nconst correctContact = createAsyncThunk('contacts/correctContact',\r\n    async ({id, name, number}) => {\r\n        try {\r\n            const body = {\r\n                name,\r\n                number\r\n            }\r\n            await axios.patch(`/contacts/${id}`, body)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n)\r\n\r\nexport { fetchContacts, postContact, deleteContact, correctContact };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenuContainer\":\"userMenu_userMenuContainer__3zZLC\",\"userMenuBtn\":\"userMenu_userMenuBtn__3xK8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1A6NW\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchContacts, postContact, deleteContact } from './contacts-operations';\r\nimport { setFilter, closeModal, openModal } from './contact-actions';\r\nimport { logOut } from '../User/user-operations';\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n    filter: '',\r\n    isModalOpen: false,\r\n    mutableContactId: null\r\n}\r\n\r\nconst contactsSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState,\r\n    extraReducers: {\r\n        [fetchContacts.fulfilled](state, action) {\r\n            state.items = action.payload;\r\n        },\r\n        [setFilter](state, action) {\r\n            state.filter = action.payload\r\n        },\r\n        [postContact.fulfilled](state, action) {\r\n            state.items.push(action.payload)\r\n        },\r\n        [deleteContact.fulfilled](state, action) {\r\n            state.items = state.items.filter(item => item.id !== action.payload)\r\n        },\r\n        [openModal](state, action) {\r\n            state.isModalOpen = true;\r\n            state.mutableContactId = action.payload\r\n        },\r\n        [closeModal](state) {\r\n            state.isModalOpen = false\r\n        },\r\n        [logOut.fulfilled](state) {\r\n            state.items= [];\r\n            state.filter= '';\r\n        }\r\n    }\r\n})\r\n\r\nexport default contactsSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { registration, logedIn, logOut, getCurrentUserData } from './user-operations'\r\n\r\n\r\nconst initialState = {\r\n    user: { name: '', email: '' },\r\n    token: null,\r\n    isLogedIn: false,\r\n    isRefreshing: false,\r\n}\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    extraReducers: {\r\n        [registration.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLogedIn = true\r\n        },\r\n        [logedIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLogedIn = true\r\n        },\r\n        [logOut.fulfilled](state) {\r\n            state.user = { name: '', email: '' };\r\n            state.token = null;\r\n            state.isLogedIn = false;\r\n        },\r\n        [getCurrentUserData.fulfilled](state, action) {\r\n            state.user.name = action.payload.name;\r\n            state.user.email = action.payload.email;\r\n            state.isLogedIn = action.payload.isLogedIn;\r\n            state.isRefreshing = false\r\n        },\r\n        [getCurrentUserData.rejected](state, action) {\r\n            state.isRefreshing = false\r\n        },\r\n        [getCurrentUserData.pending](state, action) {\r\n            state.isRefreshing = true\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsSlice from \"./contacts/contact-slice\";\r\nimport userReduser from './User/user-slice';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n  \r\nconst contactsPersistConfig = {\r\n  key: 'user',\r\n  storage,\r\n  whitelist: 'token',\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsSlice,\r\n    user: persistReducer(contactsPersistConfig, userReduser)\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development'\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport {persistor, store}","const getIsLogedIn = state => state.user.isLogedIn\r\nconst getUserName = state => state.user.user.name\r\nconst getIsRefreshing = state => state.user.isRefreshing\r\n\r\nexport {\r\n    getIsLogedIn,\r\n    getUserName,\r\n    getIsRefreshing\r\n}","import { useDispatch, useSelector, connect } from \"react-redux\";\r\nimport { getUserName } from '../../Redux/User/user-selectors';\r\nimport { logOut } from '../../Redux/User/user-operations';\r\nimport { Button } from 'react-bootstrap';\r\nimport s from './userMenu.module.css';\r\n\r\nconst LogedInData = () => {\r\n    const name = useSelector(getUserName);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={s.userMenuContainer}>\r\n            <p>Привет: {name}</p>\r\n            <Button className={s.userMenuBtn} type='button' onClick={() => dispatch(logOut())}>Выйти</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(LogedInData);","import { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from '../Navigation/Navigation.module.css';\r\n\r\n\r\nconst LogedOutNav = () => {\r\n\r\n    return (\r\n        <div className={s.navContainer}>\r\n            <NavLink to=\"/login\" className={s.navLink} activeClassName={s.activeNavLink}>Логин</NavLink>\r\n            <NavLink to=\"/register\" className={s.navLink} activeClassName={s.activeNavLink}>Регистрация</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect()(LogedOutNav);","import { connect, useSelector } from 'react-redux';\r\nimport LogedInData from './LogedInData';\r\nimport LogedOutNav from './LogedOutNav';\r\nimport { getIsLogedIn } from '../../Redux/User/user-selectors';\r\n\r\n\r\n\r\nconst UserMenu = () => {\r\n    const isLogedIn = useSelector(getIsLogedIn);\r\n\r\n    return (<>{isLogedIn ? <LogedInData /> : <LogedOutNav />}</>);\r\n};\r\n\r\nexport default connect()(UserMenu);","import { useSelector, connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navigation.module.css';\r\nimport { getIsLogedIn, getIsRefreshing } from '../../Redux/User/user-selectors';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nconst Navigation = () => {\r\n    const isLogedIn = useSelector(getIsLogedIn);\r\n    const isRefreshing = useSelector(getIsRefreshing);\r\n\r\n    return (\r\n        <>\r\n            <nav className={s.navigation}>\r\n                <div>\r\n                    <NavLink to=\"/\" exact className={s.navLink} activeClassName={s.activeNavLink}>Главная</NavLink>\r\n                    {isLogedIn && <NavLink to=\"/contacts\" className={s.navLink} activeClassName={s.activeNavLink}>Контакты</NavLink>}\r\n                </div>\r\n                {!isRefreshing && <UserMenu />}\r\n            </nav>\r\n            <hr />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect()(Navigation);","import s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={s.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;","import { connect, useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { getIsLogedIn } from '../Redux/User/user-selectors';\r\n\r\n\r\nconst PrivateRoute = ({ children, ...routProps }) => {\r\n    const isLogedIn = useSelector(getIsLogedIn)\r\n\r\n    return (<Route {...routProps}>{isLogedIn ? children : <Redirect to={'/login'}></Redirect>}</Route>)\r\n\r\n};\r\n\r\nexport default connect()(PrivateRoute)","import { connect, useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { getIsLogedIn } from '../Redux/User/user-selectors';\r\n\r\nconst PublickRoute = ({ children, restrickted = false, ...routeProps }) => {\r\n\r\n    const isLogedIn = useSelector(getIsLogedIn);\r\n    const shouldRedirect = isLogedIn && restrickted\r\n\r\n    return (<Route {...routeProps} >{shouldRedirect ? <Redirect to={'/contacts'}></Redirect> : children}</Route>)\r\n};\r\n\r\nexport default connect()(PublickRoute)","import { Switch } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux';\nimport { Suspense, useEffect, lazy } from 'react';\nimport { getCurrentUserData } from './Redux/User/user-operations'\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation'\nimport Container from './Components/Container/Container'\nimport PrivateRoute from './Components/PrivateRoute'\nimport PublickRoute from './Components/PublickRoute'\n\nconst HomeView = lazy(() => import('./Components/HomeView/HomeView'))\nconst AddContactForm = lazy(() => import('./Components/Form/Form'))\nconst Filter = lazy(() => import('./Components/Filter/filter'))\nconst ContactList = lazy(() => import('./Components/Contacts/ContactList'))\nconst Login = lazy(() => import('./Components/Login/Login'))\nconst Registration = lazy(() => import('./Components/Registration/Registration'))\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    dispatch(getCurrentUserData());\n}, [dispatch]);\n\n  return (\n    <Container>\n      <Navigation />\n      <Switch>\n        <Suspense fallback={'Загрузка...'}>\n          <PublickRoute path='/' exact>\n            <HomeView />\n          </PublickRoute>\n          <PrivateRoute path='/contacts'>\n            <AddContactForm />\n            <Filter />\n            <ContactList />\n          </PrivateRoute>\n          <PublickRoute restrickted path={'/login'}>\n            <Login />\n          </PublickRoute>\n          <PublickRoute restrickted path='/register'>\n            <Registration />\n          </PublickRoute>\n        </Suspense>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { persistor, store } from './Redux/store'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'modern-normalize/modern-normalize.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>\n        \n    , document.getElementById('root'));\n\n\n"],"sourceRoot":""}