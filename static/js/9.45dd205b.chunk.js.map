{"version":3,"sources":["../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/Alert.js","Components/Registration/Registration.js"],"names":["isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","useEffect","WeakMap","_excluded","Anchor","React","_ref","ref","href","onKeyDown","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","useButtonProps","assign","tagName","buttonProps","handleKeyDown","useEventCallback","e","trim","role","_jsx","displayName","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","defaultProps","variant","show","transition","Fade","closeLabel","Alert","uncontrolledProps","useUncontrolled","bsPrefix","closeVariant","className","children","onClose","dismissible","prefix","useBootstrapPrefix","handleClose","Transition","alert","_jsxs","undefined","classNames","CloseButton","onClick","unmountOnExit","in","Link","Heading","connect","useState","name","setName","email","setEmail","password","setPassword","isUserAlradyRegister","useSelector","getIsUserAlradyRegister","dispatch","useDispatch","handleInputChange","type","currentTarget","value","onSubmit","preventDefault","registration","Group","controlId","Label","Control","onChange","placeholder","style","marginTop","to"],"mappings":"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","file":"static/js/9.45dd205b.chunk.js","sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, connect, useSelector } from 'react-redux';\r\nimport { registration } from '../../Redux/User/user-operations';\r\nimport { getIsUserAlradyRegister } from '../../Redux/User/user-selectors';\r\nimport { Form, Button, Alert } from 'react-bootstrap/';\r\n\r\nconst Registration = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const isUserAlradyRegister = useSelector(getIsUserAlradyRegister);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = (e) => {\r\n        const type = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'email':\r\n                setEmail(value)\r\n                break;\r\n            case 'password':\r\n                setPassword(value)\r\n                break;\r\n            default: alert('invalid type')\r\n        };\r\n    };\r\n\r\n    const onRegisterFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(registration({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n\r\n        <Form onSubmit={onRegisterFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Адрес электронной почты</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Example@email.com\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label>Имя пользователя</Form.Label>\r\n                <Form.Control type=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange} placeholder=\"Имя пользователя\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Пароль</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Введите пароль\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Зарегистрировать\r\n            </Button>\r\n            {isUserAlradyRegister &&\r\n                <Alert variant={'danger'} style={{ marginTop: 15 }}>\r\n                    Пользователь зарегистрирован, воспользуйтесь другой почтой для регистрации или авторизируйтесь\r\n                    <NavLink to=\"/login\"> тут</NavLink>\r\n                </Alert>}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default connect()(Registration);"],"sourceRoot":""}