{"version":3,"sources":["Components/Registration/Registration.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["connect","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleInputChange","e","type","currentTarget","value","alert","onSubmit","preventDefault","registration","Group","className","controlId","Label","Control","onChange","placeholder","variant","FormContext","React","warning","module","exports","propTypes","PropTypes","string","tooltip","bool","as","elementType","Feedback","ref","Component","props","_jsx","classNames","displayName","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","prefix","defaultProps","BsComponent","bsPrefix","Tag","resolvedPrefix","useBootstrapPrefix","FormCheckInput","id","isValid","isInvalid","useContext","FormControl","classes","size","htmlSize","plaintext","readOnly","Object","assign","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","input","Provider","_jsxs","_Fragment","Input","FormGroup","context","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Floating","FormFloating","Check","Text","Range","Select"],"mappings":"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","file":"static/js/7.f22e3a79.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { registration } from '../../Redux/User/user-operations';\r\nimport { Form, Button } from 'react-bootstrap/';\r\n\r\nconst Registration = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInputChange = (e) => {\r\n        const type = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'email':\r\n                setEmail(value)\r\n                break;\r\n            case 'password':\r\n                setPassword(value)\r\n                break;\r\n            default: alert('invalid type')\r\n        };\r\n    };\r\n\r\n    const onRegisterFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(registration({ name, email, password }));\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n\r\n        <Form onSubmit={onRegisterFormSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Адрес электронной почты</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Example@email.com\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label>Имя пользователя</Form.Label>\r\n                <Form.Control type=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange} placeholder=\"Имя пользователя\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Пароль</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Введите пароль\" />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Зарегистрировать\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default connect()(Registration);","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"sourceRoot":""}