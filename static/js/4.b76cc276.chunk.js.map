{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","Components/Form/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js","Components/contact-selectors.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js"],"names":["FormControl","React","ref","classes","bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as","Component","props","controlId","useContext","FormContext","useBootstrapPrefix","_jsx","classNames","displayName","Object","assign","Feedback","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","input","FormCheckInput","Provider","value","_jsxs","_Fragment","tooltip","Input","Label","createWithBsPrefix","FormGroup","context","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","propTypes","_ref","PropTypes","any","validated","bool","elementType","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","connect","useState","name","setName","phoneNumber","setPhoneNumber","contacts","useSelector","getContacts","dispatch","useDispatch","handleInputChange","e","currentTarget","alert","onFormSubmit","number","find","contact","toLowerCase","isNameInList","setFilter","contactData","postContact","onSubmit","preventDefault","onChange","pattern","required","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","prefix","BsComponent","Tag","resolvedPrefix","warning","module","exports","state","items","getFilter","filter","getMutableContactId","mutableContactId","getIsModalOpen","isModalOpen","getVisibleContacts","createSelector","normalizedContact","includes"],"mappings":"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","file":"static/js/4.b76cc276.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import { useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from '../contact-selectors';\r\nimport { setFilter } from '../../Redux/contacts/contact-actions';\r\nimport { postContact } from '../../Redux/contacts/contacts-operations';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction AddContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const resetFormInput = () => {\r\n        setName('');\r\n        setPhoneNumber('');\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const type = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'phoneNumber':\r\n                setPhoneNumber(value)\r\n                break;\r\n            default: alert('invalid type')\r\n        };\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onFormSubmit(name, phoneNumber);\r\n        resetFormInput();\r\n    };\r\n\r\n    const isNameInList = (name) => contacts.find(contact =>\r\n      contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n    const onFormSubmit = (name, number) => {\r\n        if (isNameInList(name)) {\r\n            dispatch(setFilter(''))\r\n            return alert(`${name} is already in contacts`)\r\n        };\r\n        const contactData = {\r\n            name,\r\n            number\r\n        }\r\n        dispatch(postContact(contactData))\r\n        dispatch(setFilter(''))\r\n\r\n    };\r\n        \r\n    return (\r\n\r\n        <Form onSubmit={onSubmit}>\r\n                <h2>Добавление контакта</h2>\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label >Имя контакта</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label >Номер контакта</Form.Label>\r\n                <Form.Control\r\n                    type=\"tel\"\r\n                    name=\"phoneNumber\"\r\n                    value={phoneNumber}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required/>\r\n            </Form.Group>\r\n            <Button type=\"submit\" >Добавить конткакт</Button>\r\n            </Form>\r\n    );\r\n};\r\n\r\nexport default connect()(AddContactForm);","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import { createSelector } from \"reselect\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getTotal = (state) => state.contacts.total;\r\nconst getMutableContactId = (state) => state.contacts.mutableContactId;\r\nconst getIsModalOpen = (state) => state.contacts.isModalOpen\r\n\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts) => {\r\n        const normalizedContact = filter.toLowerCase();\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedContact));\r\n    }\r\n);\r\n\r\nexport {\r\n    getContacts,\r\n    getFilter,\r\n    getTotal,\r\n    getVisibleContacts,\r\n    getMutableContactId,\r\n    getIsModalOpen\r\n};","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;"],"sourceRoot":""}