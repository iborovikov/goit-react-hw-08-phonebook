{"version":3,"sources":["Components/Form/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormControl.js","Components/contact-selectors.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js"],"names":["connect","useState","name","setName","phoneNumber","setPhoneNumber","contacts","useSelector","getContacts","dispatch","useDispatch","handleInputChange","e","type","currentTarget","value","alert","onFormSubmit","number","find","contact","toLowerCase","isNameInList","setFilter","contactData","postContact","onSubmit","preventDefault","Text","className","Group","Label","Control","onChange","pattern","title","required","FormContext","React","warning","module","exports","propTypes","PropTypes","string","tooltip","bool","as","elementType","Feedback","ref","Component","props","_jsx","classNames","displayName","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","prefix","defaultProps","BsComponent","bsPrefix","Tag","resolvedPrefix","useBootstrapPrefix","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormControl","classes","size","htmlSize","plaintext","readOnly","Object","assign","state","items","getFilter","filter","getMutableContactId","mutableContactId","getIsModalOpen","isModalOpen","getVisibleContacts","createSelector","normalizedContact","includes","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","label","children","innerFormContext","useMemo","hasLabel","input","Provider","_jsxs","_Fragment","Input","FormGroup","context","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Floating","FormFloating","Check","Range","Select"],"mappings":"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","file":"static/js/4.28196124.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from '../contact-selectors';\r\nimport { setFilter } from '../../Redux/contacts/contact-actions';\r\nimport { postContact } from '../../Redux/contacts/contacts-operations';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction AddContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const resetFormInput = () => {\r\n        setName('');\r\n        setPhoneNumber('');\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const type = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n        switch (type) {\r\n            case 'name':\r\n                setName(value)\r\n                break;\r\n            case 'phoneNumber':\r\n                setPhoneNumber(value)\r\n                break;\r\n            default: alert('invalid type')\r\n        };\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onFormSubmit(name, phoneNumber);\r\n        resetFormInput();\r\n    };\r\n\r\n    const isNameInList = (name) => contacts.find(contact =>\r\n      contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n    const onFormSubmit = (name, number) => {\r\n        if (isNameInList(name)) {\r\n            dispatch(setFilter(''))\r\n            return alert(`${name} is already in contacts`)\r\n        };\r\n        const contactData = {\r\n            name,\r\n            number\r\n        }\r\n        dispatch(postContact(contactData))\r\n        dispatch(setFilter(''))\r\n\r\n    };\r\n        \r\n    return (\r\n\r\n        <Form onSubmit={onSubmit}>\r\n            <Form.Text className=\"text-bolt\">\r\n                Добавление контакта\r\n            </Form.Text>\r\n            <Form.Group className=\"mb-3\" >\r\n                <Form.Label >Имя контакта</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label >Номер контакта</Form.Label>\r\n                <Form.Control\r\n                    type=\"tel\"\r\n                    name=\"phoneNumber\"\r\n                    value={phoneNumber}\r\n                    onChange={handleInputChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required/>\r\n            </Form.Group>\r\n            <Button type=\"submit\" >Добавить конткакт</Button>\r\n            </Form>\r\n    );\r\n};\r\n\r\nexport default connect()(AddContactForm);","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import { createSelector } from \"reselect\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getTotal = (state) => state.contacts.total;\r\nconst getMutableContactId = (state) => state.contacts.mutableContactId;\r\nconst getIsModalOpen = (state) => state.contacts.isModalOpen\r\n\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts) => {\r\n        const normalizedContact = filter.toLowerCase();\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedContact));\r\n    }\r\n);\r\n\r\nexport {\r\n    getContacts,\r\n    getFilter,\r\n    getTotal,\r\n    getVisibleContacts,\r\n    getMutableContactId,\r\n    getIsModalOpen\r\n};","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});"],"sourceRoot":""}